{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michael khalaf\\\\OneDrive\\\\Desktop\\\\satellite image segmantation\\\\image_segmantation\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SAM from './componenets/SAM';\nimport Navbar from './componenets/Navbar';\nimport Topnav from './componenets/Topnav';\nimport Phonenav from './componenets/PhoneNav';\nimport Messages from './componenets/Messages';\nimport Setting from './componenets/Setting';\nimport Assets from './componenets/Assets';\nimport Login from './componenets/LogIn';\nimport SignUP from './componenets/SignUp';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [FontSize, setFontSize] = useState(\"fs-2\");\n  const toggleMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"kXORuGjZ2QjUZ48WoguiMPyW49A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SAM","Navbar","Topnav","Phonenav","Messages","Setting","Assets","Login","SignUP","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkMode","setIsDarkMode","FontSize","setFontSize","toggleMode","prevMode","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/michael khalaf/OneDrive/Desktop/satellite image segmantation/image_segmantation/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SAM from './componenets/SAM';\nimport Navbar from './componenets/Navbar';\nimport Topnav from './componenets/Topnav';\nimport Phonenav from './componenets/PhoneNav';\nimport Messages from './componenets/Messages';\nimport Setting from './componenets/Setting';\nimport Assets from './componenets/Assets';\nimport Login from './componenets/LogIn'\nimport SignUP from './componenets/SignUp'\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [FontSize, setFontSize] = useState(\"fs-2\");\n\n  const toggleMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  return (\n    <>\n      {/* <div className='container-fluid m-0 p-0 body'>\n        <div className='row m-0 p-0 justify-content-end'>\n          {window.innerWidth > 1100 ? <Navbar isDarkMode={isDarkMode} toggleMode={toggleMode} /> : null}\n          <div className=\"row col-xl-10 p-0 m-0 col-lg-9 col-md-8 col-12\">\n            {window.innerWidth > 1100 ? <Topnav isDarkMode={isDarkMode} toggleMode={toggleMode} /> : <Phonenav isDarkMode={isDarkMode} toggleMode={toggleMode} />}\n            <div className='p-5 pt-4 d-flex m-0 flex-column row justify-content-center'>\n              <Routes>\n                <Route path='/' element={<SAM isDarkMode={isDarkMode} toggleMode={toggleMode} FontSize={FontSize} setFontSize={setFontSize} />} />\n                <Route path='/messages' element={<Messages isDarkMode={isDarkMode} toggleMode={toggleMode} FontSize={FontSize} setFontSize={setFontSize} />} />\n                <Route path='/setting' element={<Setting isDarkMode={isDarkMode} toggleMode={toggleMode} FontSize={FontSize} setFontSize={setFontSize} />} />\n                <Route path='/assets' element={<Assets isDarkMode={isDarkMode} toggleMode={toggleMode} FontSize={FontSize} setFontSize={setFontSize} />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      <Login />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,MAAM,CAAC;EAEhD,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvBH,aAAa,CAACI,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACtC,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eAiBEX,OAAA,CAACL,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACT,CAAC;AAEP;AAACX,EAAA,CA7BQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}